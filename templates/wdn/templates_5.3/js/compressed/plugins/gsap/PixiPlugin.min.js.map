{"version":3,"sources":["../src/PixiPlugin.js"],"names":["_windowExists","window","_getGSAP","gsap","registerPlugin","_isFunction","value","_applyMatrix","m","m2","y","x","temp","i","z","_setSaturation","n","inv","r","_lumR","g","_lumG","b","_lumB","_colorize","color","amount","c","_splitColor","_setHue","Math","PI","cos","s","sin","_setContrast","_getFilter","target","type","filter","filterClass","_PIXI","filters","length","message","console","warn","blur","push","_addColorMatrixFilterCacheTween","p","plugin","cache","vars","add","_props","_applyBrightnessToMatrix","brightness","matrix","ColorMatrixFilter","_parseColorMatrixFilter","v","pg","startMatrix","_gsColorMatrixFilter","obj","copy","_CMFdefaults","combine","combineCMF","colorMatrixFilter","resolution","contrast","hue","colorizeAmount","saturation","_idMatrix","slice","colorize","_renderColor","ratio","t","set","_renderDirtyCache","dirty","clearDirty","_renderAutoAlpha","data","visible","alpha","_addColorTween","currentValue","startColor","indexOf","substr","endColor","_pt","PropTween","_getSetter","_isString","_degreesToRadians","charAt","parseFloat","_DEG2RAD","_renderPropWithEnd","e","round","_addRotationalPropTween","property","startNum","endValue","radians","direction","pt","cap","isString","relative","endNum","change","finalValue","split","_initCore","_win","PIXI","utils","splitColor","_colorProps","tint","lineColor","fillColor","_xyContexts","_contexts","tileX","tileY","_colorMatrixFilterProps","PixiPlugin","version","name","register","core","Plugin","propTween","getSetter","registerPIXI","pixi","init","values","DisplayObject","context","axis","colorMatrix","padding","isV4","VERSION","toLowerCase","this","blurPadding","max","Graphics","geometry","graphicsData"],"mappings":"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","file":"PixiPlugin.min.js","sourcesContent":["/*!\n * PixiPlugin 3.7.1\n * https://greensock.com\n *\n * @license Copyright 2008-2021, GreenSock. All rights reserved.\n * Subject to the terms at https://greensock.com/standard-license or for\n * Club GreenSock members, the agreement issued with that membership.\n * @author: Jack Doyle, jack@greensock.com\n*/\n/* eslint-disable */\n\nlet gsap, _win, _splitColor, _coreInitted, _PIXI, PropTween, _getSetter,\n\t_windowExists = () => typeof(window) !== \"undefined\",\n\t_getGSAP = () => gsap || (_windowExists() && (gsap = window.gsap) && gsap.registerPlugin && gsap),\n\t_isFunction = value => typeof(value) === \"function\",\n\t_warn = message => console.warn(message),\n\t_idMatrix = [1,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,1,0],\n\t_lumR = 0.212671,\n\t_lumG = 0.715160,\n\t_lumB = 0.072169,\n\t_applyMatrix = (m, m2) => {\n\t\tlet temp = [],\n\t\t\ti = 0,\n\t\t\tz = 0,\n\t\t\ty, x;\n\t\tfor (y = 0; y < 4; y++) {\n\t\t\tfor (x = 0; x < 5; x++) {\n\t\t\t\tz = (x === 4) ? m[i + 4] : 0;\n\t\t\t\ttemp[i + x] = m[i]   * m2[x] + m[i+1] * m2[x + 5] +\tm[i+2] * m2[x + 10] + m[i+3] * m2[x + 15] +\tz;\n\t\t\t}\n\t\t\ti += 5;\n\t\t}\n\t\treturn temp;\n\t},\n\t_setSaturation = (m, n) => {\n\t\tlet inv = 1 - n,\n\t\t\tr = inv * _lumR,\n\t\t\tg = inv * _lumG,\n\t\t\tb = inv * _lumB;\n\t\treturn _applyMatrix([r + n, g, b, 0, 0, r, g + n, b, 0, 0, r, g, b + n, 0, 0, 0, 0, 0, 1, 0], m);\n\t},\n\t_colorize = (m, color, amount) => {\n\t\tlet c = _splitColor(color),\n\t\t\tr = c[0] / 255,\n\t\t\tg = c[1] / 255,\n\t\t\tb = c[2] / 255,\n\t\t\tinv = 1 - amount;\n\t\treturn _applyMatrix([inv + amount * r * _lumR, amount * r * _lumG, amount * r * _lumB, 0, 0, amount * g * _lumR, inv + amount * g * _lumG, amount * g * _lumB, 0, 0, amount * b * _lumR, amount * b * _lumG, inv + amount * b * _lumB, 0, 0, 0, 0, 0, 1, 0], m);\n\t},\n\t_setHue = (m, n) => {\n\t\tn *= Math.PI / 180;\n\t\tlet c = Math.cos(n),\n\t\t\ts = Math.sin(n);\n\t\treturn _applyMatrix([(_lumR + (c * (1 - _lumR))) + (s * (-_lumR)), (_lumG + (c * (-_lumG))) + (s * (-_lumG)), (_lumB + (c * (-_lumB))) + (s * (1 - _lumB)), 0, 0, (_lumR + (c * (-_lumR))) + (s * 0.143), (_lumG + (c * (1 - _lumG))) + (s * 0.14), (_lumB + (c * (-_lumB))) + (s * -0.283), 0, 0, (_lumR + (c * (-_lumR))) + (s * (-(1 - _lumR))), (_lumG + (c * (-_lumG))) + (s * _lumG), (_lumB + (c * (1 - _lumB))) + (s * _lumB), 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1], m);\n\t},\n\t_setContrast = (m, n) => _applyMatrix([n,0,0,0,0.5 * (1 - n), 0,n,0,0,0.5 * (1 - n), 0,0,n,0,0.5 * (1 - n), 0,0,0,1,0], m),\n\t_getFilter = (target, type) => {\n\t\tlet filterClass = _PIXI.filters[type],\n\t\t\tfilters = target.filters || [],\n\t\t\ti = filters.length,\n\t\t\tfilter;\n\t\tif (!filterClass) {\n\t\t\t_warn(type + \" not found. PixiPlugin.registerPIXI(PIXI)\");\n\t\t}\n\t\twhile (--i > -1) {\n\t\t\tif (filters[i] instanceof filterClass) {\n\t\t\t\treturn filters[i];\n\t\t\t}\n\t\t}\n\t\tfilter = new filterClass();\n\t\tif (type === \"BlurFilter\") {\n\t\t\tfilter.blur = 0;\n\t\t}\n\t\tfilters.push(filter);\n\t\ttarget.filters = filters;\n\t\treturn filter;\n\t},\n\t_addColorMatrixFilterCacheTween = (p, plugin, cache, vars) => { //we cache the ColorMatrixFilter components in a _gsColorMatrixFilter object attached to the target object so that it's easy to grab the current value at any time.\n\t\tplugin.add(cache, p, cache[p], vars[p]);\n\t\tplugin._props.push(p);\n\t},\n\t_applyBrightnessToMatrix = (brightness, matrix) => {\n\t\tlet temp = new _PIXI.filters.ColorMatrixFilter();\n\t\ttemp.matrix = matrix;\n\t\ttemp.brightness(brightness, true);\n\t\treturn temp.matrix;\n\t},\n\t_copy = obj => {\n\t\tlet copy = {},\n\t\t\tp;\n\t\tfor (p in obj) {\n\t\t\tcopy[p] = obj[p];\n\t\t}\n\t\treturn copy;\n\t},\n\t_CMFdefaults = {contrast:1, saturation:1, colorizeAmount:0, colorize:\"rgb(255,255,255)\", hue:0, brightness:1},\n\t_parseColorMatrixFilter = (target, v, pg) => {\n\t\tlet filter = _getFilter(target, \"ColorMatrixFilter\"),\n\t\t\tcache = target._gsColorMatrixFilter = target._gsColorMatrixFilter || _copy(_CMFdefaults),\n\t\t\tcombine = v.combineCMF && !(\"colorMatrixFilter\" in v && !v.colorMatrixFilter),\n\t\t\ti, matrix, startMatrix;\n\t\tstartMatrix = filter.matrix;\n\t\tif (v.resolution) {\n\t\t\tfilter.resolution = v.resolution;\n\t\t}\n\t\tif (v.matrix && v.matrix.length === startMatrix.length) {\n\t\t\tmatrix = v.matrix;\n\t\t\tif (cache.contrast !== 1) {\n\t\t\t\t_addColorMatrixFilterCacheTween(\"contrast\", pg, cache, _CMFdefaults);\n\t\t\t}\n\t\t\tif (cache.hue) {\n\t\t\t\t_addColorMatrixFilterCacheTween(\"hue\", pg, cache, _CMFdefaults);\n\t\t\t}\n\t\t\tif (cache.brightness !== 1) {\n\t\t\t\t_addColorMatrixFilterCacheTween(\"brightness\", pg, cache, _CMFdefaults);\n\t\t\t}\n\t\t\tif (cache.colorizeAmount) {\n\t\t\t\t_addColorMatrixFilterCacheTween(\"colorize\", pg, cache, _CMFdefaults);\n\t\t\t\t_addColorMatrixFilterCacheTween(\"colorizeAmount\", pg, cache, _CMFdefaults);\n\t\t\t}\n\t\t\tif (cache.saturation !== 1) {\n\t\t\t\t_addColorMatrixFilterCacheTween(\"saturation\", pg, cache, _CMFdefaults);\n\t\t\t}\n\n\t\t} else {\n\t\t\tmatrix = _idMatrix.slice();\n\t\t\tif (v.contrast != null) {\n\t\t\t\tmatrix = _setContrast(matrix, +v.contrast);\n\t\t\t\t_addColorMatrixFilterCacheTween(\"contrast\", pg, cache, v);\n\t\t\t} else if (cache.contrast !== 1) {\n\t\t\t\tif (combine) {\n\t\t\t\t\tmatrix = _setContrast(matrix, cache.contrast);\n\t\t\t\t} else {\n\t\t\t\t\t_addColorMatrixFilterCacheTween(\"contrast\", pg, cache, _CMFdefaults);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (v.hue != null) {\n\t\t\t\tmatrix = _setHue(matrix, +v.hue);\n\t\t\t\t_addColorMatrixFilterCacheTween(\"hue\", pg, cache, v);\n\t\t\t} else if (cache.hue) {\n\t\t\t\tif (combine) {\n\t\t\t\t\tmatrix = _setHue(matrix, cache.hue);\n\t\t\t\t} else {\n\t\t\t\t\t_addColorMatrixFilterCacheTween(\"hue\", pg, cache, _CMFdefaults);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (v.brightness != null) {\n\t\t\t\tmatrix = _applyBrightnessToMatrix(+v.brightness, matrix);\n\t\t\t\t_addColorMatrixFilterCacheTween(\"brightness\", pg, cache, v);\n\t\t\t} else if (cache.brightness !== 1) {\n\t\t\t\tif (combine) {\n\t\t\t\t\tmatrix = _applyBrightnessToMatrix(cache.brightness, matrix);\n\t\t\t\t} else {\n\t\t\t\t\t_addColorMatrixFilterCacheTween(\"brightness\", pg, cache, _CMFdefaults);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (v.colorize != null) {\n\t\t\t\tv.colorizeAmount = (\"colorizeAmount\" in v) ? +v.colorizeAmount : 1;\n\t\t\t\tmatrix = _colorize(matrix, v.colorize, v.colorizeAmount);\n\t\t\t\t_addColorMatrixFilterCacheTween(\"colorize\", pg, cache, v);\n\t\t\t\t_addColorMatrixFilterCacheTween(\"colorizeAmount\", pg, cache, v);\n\t\t\t} else if (cache.colorizeAmount) {\n\t\t\t\tif (combine) {\n\t\t\t\t\tmatrix = _colorize(matrix, cache.colorize, cache.colorizeAmount);\n\t\t\t\t} else {\n\t\t\t\t\t_addColorMatrixFilterCacheTween(\"colorize\", pg, cache, _CMFdefaults);\n\t\t\t\t\t_addColorMatrixFilterCacheTween(\"colorizeAmount\", pg, cache, _CMFdefaults);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (v.saturation != null) {\n\t\t\t\tmatrix = _setSaturation(matrix, +v.saturation);\n\t\t\t\t_addColorMatrixFilterCacheTween(\"saturation\", pg, cache, v);\n\t\t\t} else if (cache.saturation !== 1) {\n\t\t\t\tif (combine) {\n\t\t\t\t\tmatrix = _setSaturation(matrix, cache.saturation);\n\t\t\t\t} else {\n\t\t\t\t\t_addColorMatrixFilterCacheTween(\"saturation\", pg, cache, _CMFdefaults);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\ti = matrix.length;\n\t\twhile (--i > -1) {\n\t\t\tif (matrix[i] !== startMatrix[i]) {\n\t\t\t\tpg.add(startMatrix, i, startMatrix[i], matrix[i], \"colorMatrixFilter\");\n\t\t\t}\n\t\t}\n\t\tpg._props.push(\"colorMatrixFilter\");\n\t},\n\t_renderColor = (ratio, {t, p, color, set}) => {\n\t\tset(t, p, color[0] << 16 | color[1] << 8 | color[2]);\n\t},\n\t_renderDirtyCache = (ratio, {g}) => {\n\t\tif (g) { //in order for PixiJS to actually redraw GraphicsData, we've gotta increment the \"dirty\" and \"clearDirty\" values. If we don't do this, the values will be tween properly, but not rendered.\n\t\t\tg.dirty++;\n\t\t\tg.clearDirty++;\n\t\t}\n\t},\n\t_renderAutoAlpha = (ratio, data) => {\n\t\tdata.t.visible = !!data.t.alpha;\n\t},\n\t_addColorTween = (target, p, value, plugin) => {\n\t\tlet currentValue = target[p],\n\t\t\tstartColor = _splitColor(_isFunction(currentValue) ? target[ ((p.indexOf(\"set\") || !_isFunction(target[\"get\" + p.substr(3)])) ? p : \"get\" + p.substr(3)) ]() : currentValue),\n\t\t\tendColor = _splitColor(value);\n\t\tplugin._pt = new PropTween(plugin._pt, target, p, 0, 0, _renderColor, {t:target, p:p, color:startColor, set:_getSetter(target, p)});\n\t\tplugin.add(startColor, 0, startColor[0], endColor[0]);\n\t\tplugin.add(startColor, 1, startColor[1], endColor[1]);\n\t\tplugin.add(startColor, 2, startColor[2], endColor[2]);\n\t},\n\n\t_colorProps = {tint:1, lineColor:1, fillColor:1},\n\t_xyContexts = \"position,scale,skew,pivot,anchor,tilePosition,tileScale\".split(\",\"),\n\t_contexts = {x:\"position\", y:\"position\", tileX:\"tilePosition\", tileY:\"tilePosition\"},\n\t_colorMatrixFilterProps = {colorMatrixFilter:1, saturation:1, contrast:1, hue:1, colorize:1, colorizeAmount:1, brightness:1, combineCMF:1},\n\t_DEG2RAD = Math.PI / 180,\n\t_isString = value => typeof(value) === \"string\",\n\t_degreesToRadians = value => (_isString(value) && value.charAt(1) === \"=\") ? value.substr(0, 2) + (parseFloat(value.substr(2)) * _DEG2RAD) : value * _DEG2RAD,\n\t_renderPropWithEnd = (ratio, data) => data.set(data.t, data.p, ratio === 1 ? data.e : (Math.round((data.s + data.c * ratio) * 100000) / 100000), data),\n\t_addRotationalPropTween = (plugin, target, property, startNum, endValue, radians) => {\n\t\tlet cap = 360 * (radians ? _DEG2RAD : 1),\n\t\t\tisString = _isString(endValue),\n\t\t\trelative = (isString && endValue.charAt(1) === \"=\") ? +(endValue.charAt(0) + \"1\") : 0,\n\t\t\tendNum = parseFloat(relative ? endValue.substr(2) : endValue) * (radians ? _DEG2RAD : 1),\n\t\t\tchange = relative ? endNum * relative : endNum - startNum,\n\t\t\tfinalValue = startNum + change,\n\t\t\tdirection, pt;\n\t\tif (isString) {\n\t\t\tdirection = endValue.split(\"_\")[1];\n\t\t\tif (direction === \"short\") {\n\t\t\t\tchange %= cap;\n\t\t\t\tif (change !== change % (cap / 2)) {\n\t\t\t\t\tchange += (change < 0) ? cap : -cap;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (direction === \"cw\" && change < 0) {\n\t\t\t\tchange = ((change + cap * 1e10) % cap) - ~~(change / cap) * cap;\n\t\t\t} else if (direction === \"ccw\" && change > 0) {\n\t\t\t\tchange = ((change - cap * 1e10) % cap) - ~~(change / cap) * cap;\n\t\t\t}\n\t\t}\n\t\tplugin._pt = pt = new PropTween(plugin._pt, target, property, startNum, change, _renderPropWithEnd);\n\t\tpt.e = finalValue;\n\t\treturn pt;\n\t},\n\t_initCore = () => {\n\t\tif (_windowExists()) {\n\t\t\t_win = window;\n\t\t\tgsap = _coreInitted = _getGSAP();\n\t\t\t_PIXI = _PIXI || _win.PIXI;\n\t\t\t_splitColor = color => gsap.utils.splitColor((color + \"\").substr(0,2) === \"0x\" ? \"#\" + color.substr(2) : color); // some colors in PIXI are reported as \"0xFF4421\" instead of \"#FF4421\".\n\t\t}\n\t}, i, p;\n\n//context setup...\nfor (i = 0; i < _xyContexts.length; i++) {\n\tp = _xyContexts[i];\n\t_contexts[p + \"X\"] = p;\n\t_contexts[p + \"Y\"] = p;\n}\n\n\nexport const PixiPlugin = {\n\tversion:\"3.7.1\",\n\tname:\"pixi\",\n\tregister(core, Plugin, propTween) {\n\t\tgsap = core;\n\t\tPropTween = propTween;\n\t\t_getSetter = Plugin.getSetter;\n\t\t_initCore();\n\t},\n\tregisterPIXI(pixi) {\n\t\t_PIXI = pixi;\n\t},\n\tinit(target, values, tween, index, targets) {\n\t\tif (!_PIXI) {\n\t\t\t_initCore();\n\t\t}\n\t\tif (!target instanceof _PIXI.DisplayObject) {\n\t\t\treturn false;\n\t\t}\n\t\tlet isV4 = _PIXI.VERSION.charAt(0) === \"4\",\n\t\t\tcontext, axis, value, colorMatrix, filter, p, padding, i, data;\n\t\tfor (p in values) {\n\t\t\tcontext = _contexts[p];\n\t\t\tvalue = values[p];\n\t\t\tif (context) {\n\t\t\t\taxis = ~p.charAt(p.length-1).toLowerCase().indexOf(\"x\") ? \"x\" : \"y\";\n\t\t\t\tthis.add(target[context], axis, target[context][axis], (context === \"skew\") ? _degreesToRadians(value) : value);\n\t\t\t} else if (p === \"scale\" || p === \"anchor\" || p === \"pivot\" || p === \"tileScale\") {\n\t\t\t\tthis.add(target[p], \"x\", target[p].x, value);\n\t\t\t\tthis.add(target[p], \"y\", target[p].y, value);\n\t\t\t} else if (p === \"rotation\" || p === \"angle\") { //PIXI expects rotation in radians, but as a convenience we let folks define it in degrees and we do the conversion.\n\t\t\t\t_addRotationalPropTween(this, target, p, target[p], value, p === \"rotation\");\n\t\t\t} else if (_colorMatrixFilterProps[p]) {\n\t\t\t\tif (!colorMatrix) {\n\t\t\t\t\t_parseColorMatrixFilter(target, values.colorMatrixFilter || values, this);\n\t\t\t\t\tcolorMatrix = true;\n\t\t\t\t}\n\t\t\t} else if (p === \"blur\" || p === \"blurX\" || p === \"blurY\" || p === \"blurPadding\") {\n\t\t\t\tfilter = _getFilter(target, \"BlurFilter\");\n\t\t\t\tthis.add(filter, p, filter[p], value);\n\t\t\t\tif (values.blurPadding !== 0) {\n\t\t\t\t\tpadding = values.blurPadding || Math.max(filter[p], value) * 2;\n\t\t\t\t\ti = target.filters.length;\n\t\t\t\t\twhile (--i > -1) {\n\t\t\t\t\t\ttarget.filters[i].padding = Math.max(target.filters[i].padding, padding); //if we don't expand the padding on all the filters, it can look clipped.\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (_colorProps[p]) {\n\t\t\t\tif ((p === \"lineColor\" || p === \"fillColor\") && target instanceof _PIXI.Graphics) {\n\t\t\t\t\tdata = (target.geometry || target).graphicsData; //\"geometry\" was introduced in PIXI version 5\n\t\t\t\t\tthis._pt = new PropTween(this._pt, target, p, 0, 0, _renderDirtyCache, {g: target.geometry || target});\n\t\t\t\t\ti = data.length;\n\t\t\t\t\twhile (--i > -1) {\n\t\t\t\t\t\t_addColorTween(isV4 ? data[i] : data[i][p.substr(0, 4) + \"Style\"], isV4 ? p : \"color\", value, this);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t_addColorTween(target, p, value, this);\n\t\t\t\t}\n\t\t\t} else if (p === \"autoAlpha\") {\n\t\t\t\tthis._pt = new PropTween(this._pt, target, \"visible\", 0, 0, _renderAutoAlpha);\n\t\t\t\tthis.add(target, \"alpha\", target.alpha, value);\n\t\t\t\tthis._props.push(\"alpha\", \"visible\");\n\t\t\t} else if (p !== \"resolution\") {\n\t\t\t\tthis.add(target, p, \"get\", value);\n\t\t\t}\n\t\t\tthis._props.push(p);\n\t\t}\n\t}\n};\n\n_getGSAP() && gsap.registerPlugin(PixiPlugin);\n\nexport { PixiPlugin as default };"]}