define("dcf-scrollAnimation",["exports"],function(e){"use strict";function t(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function n(e,t){for(var n=0;n<t.length;n++){var i=t[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(e,i.key,i)}}function i(e,t,i){return t&&n(e.prototype,t),i&&n(e,i),Object.defineProperty(e,"prototype",{writable:!1}),e}Object.defineProperty(e,"__esModule",{value:!0}),e.DCFScrollAnimation=void 0;var o=function(){function e(n,i,o){t(this,e),this.itemList=n,this.observerConfig=i,this.animationClassNames=o}return i(e,[{key:"disconnect",value:function(){this.observer&&this.observer.disconnect()}},{key:"initialize",value:function(){var e=this,t=function(t,n){0===e.itemsCount&&e.observer.disconnect(),t.forEach(function(t){t.intersectionRatio>=n.thresholds[0]&&t.intersectionRatio<n.thresholds[1]?e.animationClassNames.length&&e.animationClassNames.forEach(function(e){return t.target.classList.add(e)}):t.intersectionRatio>n.thresholds[1]&&(e.itemsCount--,e.observer.unobserve(t.target))})},n=function(t){t.forEach(function(t){t.intersectionRatio>0&&e.animationClassNames.length&&e.animationClassNames.forEach(function(e){return t.target.classList.add(e)}),e.loadObserver.unobserve(t.target)})};this.itemList&&(this.itemsCount=this.itemList.length,"IntersectionObserver"in window&&(this.observer=new IntersectionObserver(t,this.observerConfig),this.itemList.forEach(function(t){e.observer.observe(t)}),window.addEventListener("load",function(){e.loadObserver=new IntersectionObserver(n),e.itemList.forEach(function(t){e.loadObserver.observe(t)})})))}}]),e}();e.DCFScrollAnimation=o}),require(["dcf-scrollAnimation"],function(e){var t=document.querySelectorAll(".dcf-animate-on-scroll"),n={rootMargin:"0px",threshold:[.5,1]},i=["dcf-animated"];new e.DCFScrollAnimation(t,n,i).initialize()}),define("scroll-animations",function(){});
//# sourceMappingURL=scroll-animations.js.map