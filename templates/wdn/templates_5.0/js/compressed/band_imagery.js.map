{"version":3,"sources":["require-css/css!js-css/band_imagery","band_imagery.js","../../../../../../../onLayerEnd0.js"],"names":["define","WDN","$","initd","imageryUpdate","depth","Math","floor","window","scrollTop","each","index","value","$this","this","attr","features","split","i","length","feature","lerpstart_el","lerpend_el","lerp_start_offset","offset","lerp_end_offset","percent","lerp","scale","opacity","flipbook","hasClass","lockedAside","parent","parent_offset","top","parent_height","height","window_height","removeClass","css","addClass","pinned_top","lerpstart_scale","lerpend_scale","scale_diff","shown_scale","parseFloat","lerpstart_opaci","lerpend_opaci","shown_opaci","shownfigure","$figures","children","ceil","$shownFigure","eq","show","end","not","hide","initialize","on","scroll","setTimeout","c","d","document","a","s","createElement","type","getElementsByTagName","cssText","createTextNode"],"mappings":"AACAA,OAAA,yCAAA,cCsBAA,OAAA,gBACA,MACA,SACA,2BACA,SAAAC,EAAAC,GACA,GAAAC,IAAA,EAEAC,EAAA,WACA,GAAAC,GAAAC,KAAAC,MAAAL,EAAAM,QAAAC,YACAP,GAAA,qBAAAQ,KAAA,SAAAC,EAAAC,GAEA,GAAAC,GAAAX,EAAAY,KAEA,IAAAD,EAAAE,KAAA,aAEA,IAAA,GADAC,GAAAH,EAAAE,KAAA,aAAAE,MAAA,KACAC,EAAA,EAAAA,EAAAF,EAAAG,OAAAD,IAAA,CACA,GAAAE,GAAAJ,EAAAE,GACAG,EAAAR,EAAAE,KAAA,aAAAK,EAAA,UACAE,EAAAT,EAAAE,KAAA,aAAAK,EAAA,QACAG,EAAArB,EAAAmB,GAAAG,SACAC,EAAAvB,EAAAoB,GAAAE,SACAE,EAAAC,EAAAJ,EAAAE,EAAApB,EAEA,UAAAe,GACAQ,EAAAf,EAAAa,GAGA,WAAAN,GACAS,EAAAhB,EAAAa,GAGA,YAAAN,GACAU,EAAAjB,EAAAa,GAKAb,EAAAkB,SAAA,WACAC,EAAAnB,EAAAR,MAaA2B,EAAA,SAAAnB,EAAAR,GACA,GAAA4B,GAAApB,EAAAoB,SACAC,EAAAD,EAAAT,SAAAW,IACAC,EAAAH,EAAAI,SACAC,EAAApC,EAAAM,QAAA6B,QAEA,IAAAhC,EAAA6B,EAEArB,EAAA0B,YAAA,oBAEA,IAAAlC,GAAA6B,GACA7B,EAAAiC,EAAAF,EAAAF,EAEArB,EAAA2B,IAAA,MAAA,KACA3B,EAAA4B,SAAA,SAAAF,YAAA,cAIA,IADA1B,EAAA0B,YAAA,SACAD,EAAAzB,EAAAwB,SACAxB,EAAA4B,SAAA,UACA5B,EAAA2B,IAAA,MAAA,YACA,CACA,GAAAE,GAAAN,EAAAE,CACAzB,GAAA2B,IAAA,MAAAE,EAAA,QAiBAd,EAAA,SAAAf,EAAAa,GACA,GAAAiB,GAAA9B,EAAAE,KAAA,oBACA6B,EAAA/B,EAAAE,KAAA,kBACA8B,EAAAD,EAAAD,EACAG,EAAAC,WAAAJ,GAAAjB,EAAAmB,CACAhC,GAAA2B,IAAA,YAAA,SAAAM,EAAA,MAeAjB,EAAA,SAAAhB,EAAAa,GACA,GAAAsB,GAAAnC,EAAAE,KAAA,sBACAkC,EAAApC,EAAAE,KAAA,oBACA8B,EAAAI,EAAAD,EACAE,EAAAH,WAAAC,GAAAtB,EAAAmB,CACAhC,GAAA2B,IAAA,UAAAU,IASApB,EAAA,SAAAjB,EAAAa,GACA,GAAAyB,GAAA,EACAC,EAAAvC,EAAAwC,SAAA,SAEA3B,GAAA,GAAAA,EAAA,EACAyB,EAAA7C,KAAAgD,KAAAF,EAAAjC,OAAAO,GAAA,EACAA,IACAyB,GAAA,EAGA,IAAAI,GAAAH,EAAAI,GAAAL,EAIA,OAHAI,GAAAE,OAAAC,MACAC,IAAAJ,GAAAK,OAEAL,GASA5B,EAAA,SAAAJ,EAAAE,EAAApB,GACA,MAAAA,GAAAkB,EAAAY,KACA9B,EAAAoB,EAAAU,KACA9B,EAAAkB,EAAAY,MAAAV,EAAAU,IAAAZ,EAAAY,KACA9B,EAAAoB,EAAAU,IACA,EAEA,EAiBA,QAbA0B,WAAA,WACA3D,EAAA,qBAAA+B,SAAAO,IAAA,WAAA,YACApC,IAEAD,IACAD,EAAAM,QAAAsD,GAAA,OAAA1D,GAAA2D,OAAA,WACAC,WAAA5D,EAAA,MAEAD,GAAA,OC7LA,SAAA8D,GAAA,GAAAC,GAAAC,SAAAC,EAAA,cAAAlD,EAAA,aAAAmD,EAAAH,EAAAI,cAAA,QAAAD,GAAAE,KAAA,WAAAL,EAAAM,qBAAA,QAAA,GAAAJ,GAAAC,GAAAA,EAAAnD,GAAAmD,EAAAnD,GAAAuD,QAAAR,EAAAI,EAAAD,GAAAF,EAAAQ,eAAAT,KACA","file":"band_imagery.js","sourcesContent":["\ndefine('require-css/css!js-css/band_imagery',[],function(){});\n","/**\n * This plugin supports the scrolling effects on wdn-band imagery\n *\n * Any feature which requires monitoring the scroll depth of the user should\n * user the wdn-scroll-watch class\n *\n * Flipbook over a set of figure elements when the user scrolls between two points\n * class=\"wdn-scroll-watch\" data-lerp=\"flipbook\" data-lerp-flipbook-start=\".start-el\" data-lerp-flipbook-end=\".end-el\"\n * class=\"wdn-scroll-watch locked\"   Use on a group of figures to lock within the viewport while scrolling a band\n * class=\"wdn-scroll\"   Use on the scrollable content adjecent to the locked imagery\n *\n * For the flipbook you must define two points to interpolate between\n * and create the flipbook effect.\n *\n * Required Attributes:\n * data-lerp-{feature}-start Define a secector to start interpolation at\n * data-lerp-{feature}-end   Define a selector to end interpolation at\n * e.g. data-lerp-flipbook-start=\"#lerp-start\" data-lerp-flipbook-end=\"#lerp-end\"\n * will flip through all figures within the flipbook as the user's viewport\n * scrolls between id=\"lerp-start\" and id=\"lerp-end\"\n *\n */\n\ndefine('band_imagery',[\n\t'wdn',\n\t'jquery',\n\t'css!js-css/band_imagery'\n], function(WDN, $) {\n\tvar initd = false;\n\t\n\tvar imageryUpdate = function() {\n\t\tvar depth = Math.floor($(window).scrollTop());\n\t\t$('.wdn-scroll-watch').each(function(index, value) {\n\n\t\t\tvar $this = $(this);\n\n\t\t\tif ($this.attr('data-lerp')) {\n\t\t\t\tvar features = $this.attr('data-lerp').split(' ');\n\t\t\t\tfor (var i=0; i < features.length; i++) {\n\t\t\t\t\tvar feature           = features[i],\n\t\t\t\t\t\tlerpstart_el      = $this.attr('data-lerp-' + feature + '-start'),\n\t\t\t\t\t\tlerpend_el        = $this.attr('data-lerp-' + feature + '-end'),\n\t\t\t\t\t\tlerp_start_offset = $(lerpstart_el).offset(),\n\t\t\t\t\t\tlerp_end_offset   = $(lerpend_el).offset(),\n\t\t\t\t\t\tpercent \t\t  = lerp(lerp_start_offset, lerp_end_offset, depth);\n\n\t\t\t\t\tif (feature == 'scale') {\n\t\t\t\t\t\tscale($this, percent);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (feature == 'opacity') {\n\t\t\t\t\t\topacity($this, percent);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (feature == 'flipbook') {\n\t\t\t\t\t\tflipbook($this, percent);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ($this.hasClass('locked')) {\n\t\t\t\tlockedAside($this, depth);\n\t\t\t}\n\n\t\t});\n\t};\n\n\t/**\n\t * A locked aside allows content to be locked aside scrolling content\n\t * Typically a figure is used as a backround which is displayed along side scrolling content.\n\t *\n\t * @var $this jQuery'd region to lock position of\n\t * @var depth What depth we're currently at\n\t */\n\tvar lockedAside = function($this, depth) {\n\t\tvar parent        = $this.parent(),\n\t\t\tparent_offset = parent.offset().top,\n\t\t\tparent_height = parent.height(),\n\t\t\twindow_height = $(window).height();\n\n\t\tif (depth < parent_offset) {\n\t\t\t// Above locked region\n\t\t\t$this.removeClass('fixed bottom');\n\n\t\t} else if ((depth >= parent_offset)\n\t\t\t&& ((depth + window_height) < (parent_height + parent_offset)) ) {\n\t\t\t// Currently viewing locked region\n\t\t\t$this.css('top', '0');\n\t\t\t$this.addClass('fixed').removeClass('bottom');\n\t\t} else {\n\t\t\t// Below locked region\n\t\t\t$this.removeClass('fixed');\n\t\t\tif (window_height < $this.height()) {\n\t\t\t\t$this.addClass('bottom');\n\t\t\t\t$this.css('top', 'auto');\n\t\t\t} else {\n\t\t\t\tvar pinned_top = parent_height - window_height;\n\t\t\t\t$this.css('top', pinned_top+'px');\n\t\t\t}\n\t\t}\n\t};\n\n\t/**\n\t * Transforms the scale of an element\n\t *\n\t * Elements must have two data attributes:\n\t * data-scale-start\n\t * data-scale-end\n\t *\n\t * The start and end scales determine what CSS transform to apply.\n\t *\n\t * @var $this   jQuery'd element that holds the element to transform\n\t * @var percent A float percentage from 0-1 which will adjust the scale\n\t */\n\tvar scale = function($this, percent) {\n\t\tvar lerpstart_scale      = $this.attr('data-scale-start'),\n\t\t\tlerpend_scale        = $this.attr('data-scale-end'),\n\t\t\tscale_diff           = lerpend_scale - lerpstart_scale,\n\t\t\tshown_scale          = parseFloat(lerpstart_scale) + percent * scale_diff;\n\t\t$this.css('transform', 'scale('+shown_scale+')');\n\t};\n\n\t/**\n\t * Transforms the opacity of an element\n\t *\n\t * Elements must have two data attributes:\n\t * data-opacity-start\n\t * data-opacity-end\n\t *\n\t * The start and end values determine what CSS opacity to apply.\n\t *\n\t * @var $this   jQuery'd element that holds the element to transform\n\t * @var percent A float percentage from 0-1 which will adjust the opacity\n\t */\n\tvar opacity = function($this, percent) {\n\t\tvar lerpstart_opaci      = $this.attr('data-opacity-start'),\n\t\t\tlerpend_opaci        = $this.attr('data-opacity-end'),\n\t\t\tscale_diff           = lerpend_opaci - lerpstart_opaci,\n\t\t\tshown_opaci          = parseFloat(lerpstart_opaci) + percent * scale_diff;\n\t\t$this.css('opacity', shown_opaci);\n\t};\n\n\t/**\n\t * A flipbook swaps between a series of figures\n\t *\n\t * @var $this   jQuery'd element that holds a series of figures\n\t * @var percent A float percentage from 0-1 which will adjust which figure to show\n\t */\n\tvar flipbook = function($this, percent) {\n\t\tvar shownfigure = 0,\n\t\t\t$figures    = $this.children('figure');\n\n\t\tif (percent > 0 && percent < 1) {\n\t\t\tshownfigure = Math.ceil($figures.length * percent) - 1;\n\t\t} else if (percent) {\n\t\t\tshownfigure = -1;\n\t\t}\n\n\t\tvar $shownFigure = $figures.eq(shownfigure);\n\t\t$shownFigure.show().end()\n\t\t.not($shownFigure).hide();\n\n\t\treturn $shownFigure;\n\n\t};\n\n\t/**\n\t * Get the percentage of position between two points v0, v1,\n\t *\n\t * @return float between 0 and 1\n\t */\n\tvar lerp = function(lerp_start_offset, lerp_end_offset, depth) {\n\t\tif ((depth > lerp_start_offset.top)\n\t\t\t&& (depth < lerp_end_offset.top)) {\n\t\t\treturn (depth - lerp_start_offset.top)/(lerp_end_offset.top - lerp_start_offset.top);\n\t\t} else if (depth > lerp_end_offset.top) {\n\t\t\treturn 1;\n\t\t}\n\t\treturn 0;\n\t};\n\n\tvar Plugin = {\n\t\tinitialize : function() {\n\t\t\t$('.wdn-scroll-watch').parent().css('position', 'relative');\n\t\t\timageryUpdate();\n\t\t\t\n\t\t\tif (!initd) {\n\t\t\t\t$(window).on(\"load\", imageryUpdate).scroll(function() {\n\t\t\t\t\tsetTimeout(imageryUpdate, 50);\n\t\t\t\t});\n\t\t\t\tinitd = true;\n\t\t\t}\n\t\t}\n\t};\n\n\treturn Plugin;\n});\n\n","\n(function(c){var d=document,a='appendChild',i='styleSheet',s=d.createElement('style');s.type='text/css';d.getElementsByTagName('head')[0][a](s);s[i]?s[i].cssText=c:s[a](d.createTextNode(c));})\n('.wdn-band .wdn-scroll-watch.locked{bottom:auto;left:0;position:absolute;top:0;z-index:0}.wdn-band .wdn-scroll-watch.locked.fixed{position:fixed;bottom:0;top:auto}.wdn-band .wdn-scroll{position:relative;z-index:0}');\n"]}